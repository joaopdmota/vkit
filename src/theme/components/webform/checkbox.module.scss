@import '../../main.scss';
@import '../../utils/color.scss';
@import './inputBox.scss';

.checkbox {
  @extend .inputBox;

  .content {
    .box {
      width: 28px;
      height: 28px;
      cursor: pointer;
      border-radius: 5px;
      border: 1px solid color(light, $colorsDefaultMarkupTint);
      background-color: var(--vkit-color-contrast-1);
      @include transition(all 0.2s);

      .check {
        width: 100%;
        height: 100%;
        position: relative;

        &::after {
          top: 36%;
          left: 21%;
          width: 0;
          height: 15%;
          content: '';
          position: absolute;
          background-color: var(--vkit-color-contrast-1);
          @include border-radius(30px);
          @include transform(rotate(44deg));
          @include transformOrigin(top left);
        }

        &::before {
          top: 64%;
          left: 31%;
          width: 0;
          height: 15%;
          content: '';
          position: absolute;
          background-color: var(--vkit-color-contrast-1);
          @include border-radius(30px);
          @include transform(rotate(-44deg));
          @include transformOrigin(top left);
        }
      }
    }

    &:hover .box {
      border-color: color(light, $colorsDefaultMarkupTint);
    }

    .label {
      display: flex;
      align-items: center;
      color: color(light, $colorsDefaultMarkupTint);
    }
  }

  .input {
    opacity: 0;
    width: 0;
    height: 0;
    display: none;

    &:checked + .content .box {
      .check {
        &::after {
          width: 39%;
          @include transition(width 0.2s);
        }

        &::before {
          width: 66%;
          @include transition(width 0.3s linear 0.1s);
        }
      }
    }

    &:disabled + .content .box {
      border-color: var(--vkit-color-contrast-6);
      background-color: var(--vkit-color-contrast-2);
      cursor: default;

      .check {
        &::after,
        &::before {
          background-color: var(--vkit-color-contrast-2);
        }
      }
    }
  }

  &.small .content .box {
    @include border-radius(3px);
  }

  &.medium .content .box {
    @include border-radius(5px);
  }

  &.large .content .box {
    @include border-radius(6px);
  }

  &.error {
    .content {
      .box {
        border-color: color(danger, $colorsDefaultMarkupTint);
        @include box-shadow(0 0 0 4px rgba(color(danger, $colorsDefaultMarkupTint), 0.15));
      }

      span {
        color: color(danger, $colorsDefaultMarkupTint);
      }
    }

    .input:checked + .content {
      .box {
        border-color: color(danger, $colorsDefaultMarkupTint);
        background-color: color(danger, $colorsDefaultMarkupTint);
      }
    }
  }

  &.textLeft .content {
    @include flex-direction(row-reverse);
  }

  &.rounded .content .box {
    @include border-radius(50%);

    .check {
      margin: 15%;
      width: 70%;
      height: 70%;
    }
  }

  &.noAnimation {
    .content {
      .box {
        @include transition(none);
      }
    }

    .input {
      &:checked + .content .box {
        .check {
          &::after,
          &::before {
            @include transition(none);
          }
        }
      }
    }
  }
}
